/*
 * This file is generated by jOOQ.
*/
package com.danyl.shiro.jooq.gen.shiro.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Permission implements Serializable {

    private static final long serialVersionUID = 1743568781;

    private Integer pid;
    private String  name;
    private String  url;

    public Permission() {}

    public Permission(Permission value) {
        this.pid = value.pid;
        this.name = value.name;
        this.url = value.url;
    }

    public Permission(
        Integer pid,
        String  name,
        String  url
    ) {
        this.pid = pid;
        this.name = name;
        this.url = url;
    }

    public Integer getPid() {
        return this.pid;
    }

    public Permission setPid(Integer pid) {
        this.pid = pid;
        return this;
    }

    public String getName() {
        return this.name;
    }

    public Permission setName(String name) {
        this.name = name;
        return this;
    }

    public String getUrl() {
        return this.url;
    }

    public Permission setUrl(String url) {
        this.url = url;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Permission other = (Permission) obj;
        if (pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!pid.equals(other.pid))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (url == null) {
            if (other.url != null)
                return false;
        }
        else if (!url.equals(other.url))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Permission (");

        sb.append(pid);
        sb.append(", ").append(name);
        sb.append(", ").append(url);

        sb.append(")");
        return sb.toString();
    }
}
