/*
 * This file is generated by jOOQ.
*/
package com.danyl.shiro.jooq.gen.shiro.tables;


import com.danyl.shiro.jooq.gen.shiro.DefaultSchema;
import com.danyl.shiro.jooq.gen.shiro.Indexes;
import com.danyl.shiro.jooq.gen.shiro.tables.records.PermissionRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionRole extends TableImpl<PermissionRoleRecord> {

    private static final long serialVersionUID = 392497082;

    /**
     * The reference instance of <code>permission_role</code>
     */
    public static final PermissionRole PERMISSION_ROLE = new PermissionRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PermissionRoleRecord> getRecordType() {
        return PermissionRoleRecord.class;
    }

    /**
     * The column <code>permission_role.rid</code>.
     */
    public final TableField<PermissionRoleRecord, Integer> RID = createField("rid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>permission_role.pid</code>.
     */
    public final TableField<PermissionRoleRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>permission_role</code> table reference
     */
    public PermissionRole() {
        this(DSL.name("permission_role"), null);
    }

    /**
     * Create an aliased <code>permission_role</code> table reference
     */
    public PermissionRole(String alias) {
        this(DSL.name(alias), PERMISSION_ROLE);
    }

    /**
     * Create an aliased <code>permission_role</code> table reference
     */
    public PermissionRole(Name alias) {
        this(alias, PERMISSION_ROLE);
    }

    private PermissionRole(Name alias, Table<PermissionRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private PermissionRole(Name alias, Table<PermissionRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_PID, Indexes.IDX_RID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRole as(String alias) {
        return new PermissionRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRole as(Name alias) {
        return new PermissionRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PermissionRole rename(String name) {
        return new PermissionRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PermissionRole rename(Name name) {
        return new PermissionRole(name, null);
    }
}
