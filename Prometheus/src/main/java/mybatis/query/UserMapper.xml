<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.query.UserMapper">

    <resultMap id="user_mapping" type="User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>
        <result column="borndate" property="bornDate"/>
    </resultMap>

    <!--<insert id="add" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="User">-->
        <!--INSERT INTO user(name,email,age,bornDate) VALUES (#{name},#{email},#{age},#{bornDate})-->
    <!--</insert>-->

    <insert id="batchAdd" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="User">
        INSERT INTO user(name,email,age,bornDate) VALUES
        <foreach collection="list" item="user" separator=",">
            (#{user.name},#{user.email},#{user.age},#{user.bornDate})
        </foreach>
    </insert>

    <update id="update" parameterType="User">
        UPDATE user
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="email != null">
                email=#{email},
            </if>
            <if test="age != 0">
                age=#{age},
            </if>
            <if test="bornDate != null">
                borndate=#{bornDate},
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <sql id="user_column">
        id,name,email,age,bornDate
    </sql>
    <select id="get" parameterType="long" resultMap="user_mapping">
        SELECT <include refid="user_column"/> FROM user WHERE id=#{id}
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM user WHERE id=#{id}
    </delete>

    <select id="list" resultType="User">
        SELECT <include refid="user_column"/> FROM user
    </select>

    <sql id="user_where">
        <where>
            <if test="name != null">
                AND name LIKE concat('%',#{name},'%')
            </if>
            <if test="beginAge>-1">
                AND age &gt;= #{beginAge}
            </if>
            <if test="endAge>-1">
                AND age &lt;= #{endAge}
            </if>
        </where>
    </sql>

    <select id="queryForCount" parameterType="mybatis.query.UserQueryObject" resultType="int">
        SELECT count(id) FROM user
        <include refid="user_where"/>
    </select>
    
    <select id="query" parameterType="mybatis.query.UserQueryObject" resultMap="user_mapping">
        SELECT <include refid="user_column"/> FROM user
        <include refid="user_where"/>
        ORDER BY age
        <if test="pageSize>-1">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>

    <select id="login" parameterType="hashmap" resultMap="user_mapping">
        SELECT <include refid="user_column"/>
        FROM user
        WHERE name= #{username} AND email=#{email}
    </select>

    <select id="login2" resultMap="user_mapping">
        SELECT <include refid="user_column"/>
        FROM user
        WHERE name=#{username} AND email=#{email}
    </select>
</mapper>